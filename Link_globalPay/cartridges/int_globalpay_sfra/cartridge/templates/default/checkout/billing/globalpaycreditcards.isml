  <isset name="gp_AuthenticationsUrl" value="${require('dw/web/URLUtils').url('GlobalPay-Authentications').toString()}" scope="page"/>
 <form id="payment-form" action="/Payment/Charge" method="post">
    <!-- Other input fields to capture relevant data -->
    <!-- Target for the credit card form -->
    <div id="credit-card"></div>
</form>

<!--<script src="https://js.globalpay.com/v1/globalpayments.js"></script>-->

<script src="${URLUtils.staticURL('/js/local-globalpayments.js')}"></script>
<script src="${URLUtils.staticURL('/js/globalpayments-3ds.js')}"></script>
<link rel="stylesheet" href="${URLUtils.staticURL('/css/paymentbuttons.css')}" />
<script defer type="text/javascript">
// Configure account
GlobalPayments.configure({
    accessToken: '${pdict.token}',
    env: '${pdict.env}', // or "production"
    currency: '${pdict.currency}',
    country:'${pdict.country}',
    gpaymerchantid:'${pdict.gpaymerchantid}',
    gpaymerchantname:'${pdict.gpaymerchantname}',
    gpayenv:'${pdict.gpayenv}'
});

// Create Form
const cardForm = GlobalPayments.creditCard.form("#credit-card", { style: "local-gp-default" });

const cvvList = document.querySelectorAll("#saved-payment-security-code");
if (cvvList.length) {
  for (let i = 0; i < cvvList.length; i++) {
    cvvList[i].addEventListener("keypress", isNumberKey, false);
    }
}

function isNumberKey(evt){
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode == 46 || charCode > 31 && (charCode < 48 || charCode > 57)){
        evt.preventDefault();
        return false;
    }
    return true;
}

cardForm.on("token-success", (resp) => {
    // add payment token to form as a hidden input
    const token = document.createElement("input");
    token.type = "hidden";
    token.name = "payment_token";
    token.value = resp.paymentReference; 
    $('.gpayerror').text('');
    $("input[name='dwfrm_billing_creditCardFields_cardNumber']").val(resp.details.cardNumber);
    $('#cardType').val(resp.details.cardType.charAt(0).toUpperCase()+resp.details.cardType.substring(1, resp.details.cardType.length));
    $("#expirationMonth").val(parseInt(resp.details.expiryMonth, 10));
    $("#expirationYear").val(resp.details.expiryYear);
    $("#paymentId").val(JSON.stringify(resp));
    if($("#expirationYear").val()){
    var pmttoken = $('#isnewcard').val()?resp.paymentReference : $('.saved-payment-instrument' + '.selected-payment').data('pmt');
         if($('#isnewcard').val()){
        var cartData = {
           amount : parseFloat($('.grand-total-sum').text().replace('$', '').replace(',', '')) * 100,
           address1: $('input[name*="shippingAddress_addressFields_address1"]').val(),
           city: $('input[name*="shippingAddress_addressFields_city"]').val(),
           postalcode : $('input[name*="shippingAddress_addressFields_postalCode"]').val()
         };

          const {
                checkVersion,
                getBrowserData,
                initiateAuthentication,
                ChallengeWindowSize,
            } = GlobalPayments.ThreeDSecure;

            try {
                    checkVersion('GlobalPay-Authentication', {
                        card: {
                            reference: pmttoken,
                            cartData:cartData
                        },
                    }).then( function( versionCheckData ) {
                        if(versionCheckData.enrolled){
                                $("#authId").val(versionCheckData.id);
               var redirect = $('<form>')
                        .appendTo(document.body)
                        .attr({
                            method: 'POST',
                            action: 'https://test.portal.gpwebpay.com/pay-sim-gpi/sim/pareq'
                        });

                    $('<input>')
                        .appendTo(redirect)
                        .attr({
                            name: 'PaReq',
                            value: versionCheckData.challengevalue
                        });

                    $('<input>')
                        .appendTo(redirect)
                        .attr({
                            name: 'TermUrl',
                            value: 'https://zyem-004.sandbox.us01.dx.commercecloud.salesforce.com/on/demandware.store/Sites-RefArch-Site/en_US/GlobalPay-ThreedsResp'
                        });
                $('<input>')
                        .appendTo(redirect)
                        .attr({
                            name: 'MD',
                            value: versionCheckData.id
                        });
                        redirect.submit();
                        $( ".submit-payment" ).trigger( "click" );
                        } else if ( versionCheckData.error ) {

                        }else{
                          console.log('::::'+versionCheckData.id);
                         $("#authId").val(versionCheckData.id);
                        
                           // setTimeout(Initate,1000)
                       // function Initate(){
                                try {
                                    authenticationData = initiateAuthentication('GlobalPay-Initiation', {
                                    serverTransactionId: versionCheckData.serverTransactionId,
                                    challengeNotificationUrl:'',
                                    authId: versionCheckData.id,
                                    methodUrlComplete: true,
                                    card: {
                                        reference:pmttoken,// resp.paymentReference,
                                         cartData:cartData
                                    },
                                    challengeWindow: {
                                        windowSize: ChallengeWindowSize.Windowed600x400,
                                        displayMode: 'lightbox',
                                    }
                                    // order: {}, // optional if data available on client-side
                                    // payer: {}, // optional if data available on client-side
                                }).then(function(authenticationData){
                                    console.log('Authentication Data::::11', authenticationData);

                                    console.log('json:::authenticationData'+JSON.stringify(authenticationData));
                                    console.log(':::status:'+authenticationData.status);
                                    $("#isthreeds").val(authenticationData.status);
                                    if (authenticationData.mpi != undefined){
                                    var eci = authenticationData.mpi.eci;
                                      if (authenticationData.status != "CHALLENGE_REQUIRED") {
                                            if (eci == "05" || eci == "06" || eci == "01" || eci == "02") {
                                                console.log("Frictionless Issuer Authentication Success, Recommend proceed to auth");
                                                console.log("ECI: ", eci);
                                                $( ".submit-payment" ).trigger( "click" );
                                            } else {
                                                console.log("Frictionless Issuer Authentication Failed, Recommend decline auth!");
                                                console.log("ECI: ", eci);
                                                 $('.gpayerror').text('Card got declined, please enter another card.');
                                            }
                                    }// Challenge Flow
                                    else {
                                        console.log(':::'+JSON.parse(authenticationData.challenge.response.data).transStatus);
                                        if (JSON.parse(authenticationData.challenge.response.data).transStatus == "Y") {
                                            console.log("Challenge Issuer Authentication Success, Recommend proceed to auth");
                                           $( ".submit-payment" ).trigger( "click" );
                                        } else {
                                            console.log("Challenge Issuer Authentication Failed, Recommend decline auth!");
                                            //$( ".submit-payment" ).trigger( "click" );
                                             $('.gpayerror').text('Card got declined, please enter another card.');
                                        }
                                    }
                                    } else {
                                         $('.gpayerror').text('Card got declined, please enter another card.');
                                    }

                                })
                               
                                }
                                catch(e){
                                }
                            //}
                        }
                    });
                 }
                 catch (e) {
                    // TODO: add your error handling here
                 }
         }
    
    form.appendChild(token);
    form.submit();
    }
    else{
      $('.gpayerror').text('Card details are not valid, please enter valid card details.');
    }
});

cardForm.on("token-error", (resp) => {
    // show error to the consumers
    $('.gpayerror').text('Card details are not valid, please enter valid card details.'); 
});
</script>
